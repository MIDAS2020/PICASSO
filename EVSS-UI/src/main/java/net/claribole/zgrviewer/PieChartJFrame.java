/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.claribole.zgrviewer;

import java.awt.Dimension;
import java.util.HashMap;
import java.util.Iterator;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author kaihuang
 */
public class PieChartJFrame extends javax.swing.JFrame  implements ChartMouseListener{
    private JPanel mainPanel;
    private HashMap<Integer, Integer> hashMap;
    /**
     * Creates new form PieChartJFrame
     */
    public PieChartJFrame(){
        
    }
    public PieChartJFrame(HashMap<Integer, Integer> hmap) {
        hashMap = hmap;
        initComponents();
        initPieGUI();
        generatePie();
    }
    public void generatePie(){
        DefaultPieDataset data  = new DefaultPieDataset();
        Iterator iterator=hashMap.keySet().iterator();  
        while(iterator.hasNext()){  
            Integer size = (Integer) iterator.next();  
            Integer count = hashMap.get(size); 
            int lowbound = size*20 > 0 ? size*20 : 1;
            int upbound  = (size+1)*20;
            String key = String.valueOf(lowbound)+"~" + String.valueOf(upbound);
            data.setValue(key,count );
        }  
        JFreeChart chart = ChartFactory.createPieChart("Size Distribution",  
            data, // data   
            true, // include legend   
            true,   
            true   
        );   
        // add the chart to a panel...   
        ChartPanel chartPanel = new ChartPanel(chart, true, true, true, true, true);   
        //chartPanel.addChartMouseListener(this);
        chartPanel.setPreferredSize(new Dimension(400, 400));
        mainPanel.add(chartPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
        setVisible(true);
    }
    public void initPieGUI(){
           setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	   setSize(new Dimension(500, 500));
	   mainPanel = new JPanel();
           mainPanel.setPreferredSize(new Dimension(400, 400));
           setContentPane(mainPanel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PieChartJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PieChartJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PieChartJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PieChartJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PieChartJFrame().setVisible(true);
            }
        });
    }

    @Override
    public void chartMouseClicked(ChartMouseEvent cme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void chartMouseMoved(ChartMouseEvent cme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
